{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,oDAA4B;AAC5B,wDAAgC;AAChC,wDAAgC;AAEhC,QAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE;IACzB,KAAK,KAAK;QAAE,gBAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;QAAC,MAAM;IACtD,KAAK,KAAK;QAAE,gBAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;QAAC,MAAM;IACtD,KAAK,KAAK;QAAE,gBAAM,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,UAAU,EAAC,CAAC,CAAC;QAAC,MAAM;IACtD;QAAS,OAAO,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;QAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CAC9E;AAED,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,eAAe,CAAC;AAEjC,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,WAAqB,CAAC;AAC7C,kBAAS,CAAC,OAAO,GAAG,kBAAQ,CAAC;AAEnC,gDAAwB;AAExB,CAAC,GAAS,EAAE;IACR,IAAI;QACA,MAAM,MAAM,GAAG,MAAM,kBAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;QAChG,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;KACpD;IAAC,OAAO,CAAC,EAAE;QACR,OAAO,CAAC,KAAK,CAAC,iCAAiC,GAAG,CAAC,CAAC,CAAC;QACrD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACnB;IAED,IAAI;QACA,MAAM,MAAM,GAAG,MAAM,aAAG,CAAC,MAAM,CAAC,aAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,sCAAsC,aAAG,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,aAAG,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAClG;IAAC,OAAO,CAAC,EAAE;QACR,OAAO,CAAC,KAAK,CAAC,6BAA6B,GAAG,CAAC,CAAC,CAAC;QACjD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACnB;IAED,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;AAC3C,CAAC,CAAA,CAAC,EAAE,CAAC","sourcesContent":["import dotenv from 'dotenv';\r\nimport mongoose from 'mongoose';\r\nimport bluebird from 'bluebird';\r\n\r\nswitch(process.env.NODE_ENV) {\r\n    case 'dev': dotenv.config({ path: '.env-dev'}); break;\r\n    case 'tst': dotenv.config({ path: '.env-tst'}); break;\r\n    case 'prd': dotenv.config({ path: '.env-prd'}); break;\r\n    default: console.error('No environment specified - exit'); process.exit(1);\r\n}\r\n\r\nprocess.env.TZ = 'Europe/Berlin';\r\n\r\nconst mongouri = process.env.MONGODB_URI as string;\r\n(<any>mongoose).Promise = bluebird;\r\n\r\nimport app from './app';\r\n\r\n(async () => {\r\n    try {\r\n        const status = await mongoose.connect(mongouri, { autoReconnect: true, useNewUrlParser: true });\r\n        console.log('Connection to mongodb established');\r\n    } catch (e) {\r\n        console.error('Check your mongodb connection: ' + e);\r\n        process.exit(1);\r\n    }\r\n\r\n    try {\r\n        const status = await app.listen(app.get('port'));\r\n        console.log(`App is running at http://localhost:${app.get('port')} in ${app.get('env')} mode`);\r\n    } catch (e) {\r\n        console.error('Check your express server: ' + e);\r\n        process.exit(1);\r\n    }\r\n\r\n    console.log('Press CTRL-C to stop \\n');\r\n})();"]}